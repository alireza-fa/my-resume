# Generated by Django 4.1.5 on 2023-01-18 05:37

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutMe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=34, verbose_name='name')),
                ('name_en', models.CharField(max_length=34, verbose_name='name english')),
                ('address', models.CharField(max_length=120, verbose_name='address')),
                ('address_en', models.CharField(max_length=120, verbose_name='address en')),
                ('profession', models.CharField(max_length=64, verbose_name='profession')),
                ('profession_en', models.CharField(max_length=64, verbose_name='profession english')),
                ('describe_short', models.CharField(max_length=200, verbose_name='describe short')),
                ('describe_short_en', models.CharField(max_length=200, verbose_name='describe short english')),
                ('describe', models.TextField(verbose_name='describe')),
                ('describe_en', models.TextField(verbose_name='describe english')),
                ('resume', models.FileField(upload_to='', verbose_name='resume')),
                ('image', models.ImageField(help_text='recommended: Image(600X673)', upload_to='', verbose_name='image')),
                ('logo', models.ImageField(default='logo.png', help_text='recommended: Image(300X75)', upload_to='', verbose_name='logo')),
                ('logo2', models.ImageField(default='logo-2.png', help_text='recommended: Image(300X75)', upload_to='', verbose_name='logo 2')),
                ('year_experience', models.PositiveSmallIntegerField(verbose_name='years of experience')),
                ('customer_count', models.PositiveIntegerField(verbose_name='customer count')),
                ('tea_count', models.PositiveIntegerField(verbose_name='tea count')),
                ('project_count', models.PositiveIntegerField(verbose_name='project count')),
            ],
            options={
                'verbose_name': 'About Me',
                'verbose_name_plural': 'About Me',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=34, verbose_name='name')),
                ('name_en', models.CharField(max_length=34, verbose_name='name english')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientSayAboutMe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=34, verbose_name='fullname')),
                ('position', models.CharField(max_length=64, verbose_name='position')),
                ('image', models.ImageField(help_text='recommended: Image(400X400)', upload_to='', verbose_name='image')),
                ('description', models.TextField(verbose_name='description')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Client Says About Me',
                'verbose_name_plural': 'Clients Says About Me',
            },
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(auto_created=True)),
                ('fullname', models.CharField(max_length=64, verbose_name='fullname')),
                ('phone_number', models.CharField(max_length=18, verbose_name='phone number')),
                ('email', models.CharField(max_length=150, verbose_name='email')),
                ('subject', models.CharField(error_messages='subject', max_length=120)),
                ('message', models.TextField(verbose_name='message')),
                ('is_read', models.BooleanField(default=False, verbose_name='is read')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ('-created',),
            },
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=34, verbose_name='name')),
                ('grade_en', models.CharField(max_length=34, verbose_name='name english')),
                ('academy', models.CharField(max_length=64, verbose_name='academy')),
                ('academy_en', models.CharField(max_length=64, verbose_name='academy english')),
                ('date', models.CharField(max_length=34, verbose_name='date')),
                ('date_en', models.CharField(max_length=34, verbose_name='date english')),
            ],
            options={
                'verbose_name': 'Education',
                'verbose_name_plural': 'Educations',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=34, verbose_name='name')),
                ('position_en', models.CharField(max_length=34, verbose_name='name english')),
                ('company_name', models.CharField(max_length=64, verbose_name='academy')),
                ('company_name_en', models.CharField(max_length=64, verbose_name='academy english')),
                ('date', models.CharField(max_length=34, verbose_name='date')),
                ('date_en', models.CharField(max_length=34, verbose_name='date english')),
            ],
            options={
                'verbose_name': 'Experience',
                'verbose_name_plural': 'Experiences',
            },
        ),
        migrations.CreateModel(
            name='LogoPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=34, verbose_name='name')),
                ('image', models.ImageField(help_text='recommended: Image(180X17)', upload_to='', verbose_name='image')),
            ],
            options={
                'verbose_name': 'Logo Partner',
                'verbose_name_plural': 'Logo Partners',
            },
        ),
        migrations.CreateModel(
            name='PhotoGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('image', models.ImageField(upload_to='', verbose_name='image')),
                ('is_active', models.BooleanField(verbose_name='is active')),
            ],
            options={
                'verbose_name': 'Photo Gallery',
                'verbose_name_plural': 'Photo Galleries',
            },
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=34, verbose_name='name')),
                ('name_en', models.CharField(max_length=34, verbose_name='name english')),
                ('type', models.CharField(choices=[('fa-laptop-code', 'Laptop, programming and ...'), ('fa-object-ungroup', 'Object, UI Designer and ...'), ('fa-palette', 'Palette, Logo Designer and ...'), ('fa-camera-retro', 'Camera, Photography and ...'), ('fa-film', 'Film, Movie Edit and ...'), ('fa-bullhorn', 'Bullhorn, Social Media and ...')], max_length=34, verbose_name='type')),
                ('description', models.CharField(max_length=250, verbose_name='description')),
            ],
            options={
                'verbose_name': 'Profession',
                'verbose_name_plural': 'Professions',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=34, verbose_name='name')),
                ('name_en', models.CharField(max_length=34, verbose_name='name english')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('price_one_project', models.CharField(max_length=10, verbose_name='price based on a project')),
                ('price_one_project_en', models.CharField(max_length=10, verbose_name='price based on a project *dollar*')),
                ('price_many_project', models.CharField(max_length=10, verbose_name='price based on many project')),
                ('price_many_project_en', models.CharField(max_length=10, verbose_name='price based on many project *dollar*')),
                ('price_one_day', models.CharField(max_length=10, verbose_name='price based on the day')),
                ('price_one_day_en', models.CharField(max_length=10, verbose_name='price based on the day *dollar*')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=150, verbose_name='question')),
                ('answer', models.TextField(verbose_name='answer')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Question And Answer',
                'verbose_name_plural': 'Questions And Answers',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=34, verbose_name='name')),
                ('name_en', models.CharField(max_length=34, verbose_name='name english')),
                ('percent', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='percent must be greater than 1'), django.core.validators.MaxValueValidator(100, message='percent must be lesser than 100')], verbose_name='percent')),
            ],
            options={
                'verbose_name': 'Skil',
                'verbose_name_plural': 'Skills',
            },
        ),
        migrations.CreateModel(
            name='StartProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=34, verbose_name='name')),
                ('phone_number', models.CharField(max_length=18, verbose_name='phone number')),
                ('email', models.EmailField(max_length=150, verbose_name='email')),
                ('subject', models.CharField(max_length=34, verbose_name='subject')),
                ('message', models.TextField(verbose_name='message')),
                ('created', models.DateTimeField(default=datetime.datetime(2023, 1, 18, 5, 37, 16, 539335, tzinfo=datetime.timezone.utc), verbose_name='created')),
                ('is_read', models.BooleanField(default=False, verbose_name='is read')),
            ],
            options={
                'verbose_name': 'Start Project',
                'verbose_name_plural': 'Start Projects',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='WorkSamples',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='title')),
                ('title_en', models.CharField(max_length=64, verbose_name='title')),
                ('image', models.ImageField(help_text='recommended: Image(420X260)', upload_to='', verbose_name='image')),
                ('start_at', models.CharField(max_length=34, verbose_name='start at')),
                ('end_at', models.CharField(max_length=34, verbose_name='end at')),
                ('rate', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, 'rate must be greater than or equal 0'), django.core.validators.MaxValueValidator(5, 'rate must be lesser than or equal 5')], verbose_name='rate')),
                ('website_url', models.CharField(max_length=250, verbose_name='website url')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='work_sample', to='core.category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'Work Sample',
                'verbose_name_plural': 'Work Samples',
            },
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MePhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=18, verbose_name='phone_number')),
                ('me', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_numbers', to='core.aboutme', verbose_name='me')),
            ],
            options={
                'verbose_name': 'Me Phone Number',
                'verbose_name_plural': 'Me Phone Numbers',
            },
        ),
        migrations.CreateModel(
            name='MeEmailAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=150, verbose_name='email')),
                ('me', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', to='core.aboutme', verbose_name='me')),
            ],
            options={
                'verbose_name': 'Me Email Address',
                'verbose_name_plural': 'Me Email Addresses',
            },
        ),
    ]
